// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_INIT_StatusEffectImpl : CParticleFunctionInitializerImpl, C_INIT_StatusEffect {

  public C_INIT_StatusEffectImpl(nint handle) : base(handle) {
  }

  public ref Detail2Combo_t Detail2Combo {
    get => ref _Handle.AsRef<Detail2Combo_t>(Schema.GetOffset(0x4B342FEDDABDBAA0));
  }
  public ref float Detail2Rotation {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FEDA43F4C72));
  }
  public ref float Detail2Scale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED408BC6AE));
  }
  public ref float Detail2BlendFactor {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FEDC0666858));
  }
  public ref float ColorWarpIntensity {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED03BEB6ED));
  }
  public ref float DiffuseWarpBlendToFull {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED74B5C4FC));
  }
  public ref float EnvMapIntensity {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FEDF3BE760D));
  }
  public ref float AmbientScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED7C839F9D));
  }
  public ref Color SpecularColor {
    get => ref _Handle.AsRef<Color>(Schema.GetOffset(0x4B342FED524950B7));
  }
  public ref float SpecularScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED3444DCD4));
  }
  public ref float SpecularExponent {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED08D42D79));
  }
  public ref float SpecularExponentBlendToFull {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FEDF9B144E4));
  }
  public ref float SpecularBlendToFull {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FEDD59D4FD9));
  }
  public ref Color RimLightColor {
    get => ref _Handle.AsRef<Color>(Schema.GetOffset(0x4B342FEDCBFCCC98));
  }
  public ref float RimLightScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED23E615CF));
  }
  public ref float ReflectionsTintByBaseBlendToNone {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FEDC354754A));
  }
  public ref float MetalnessBlendToFull {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED44B6A02C));
  }
  public ref float SelfIllumBlendToFull {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4B342FED0FCD5A19));
  }


}