namespace SwiftlyS2.Shared.Convars;

[Flags]
public enum ConvarFlags : ulong
{
  /// <summary>
  /// The default, no flags at all
  /// </summary>
  NONE = 0UL,

  /// <summary>
  /// Allows concommand callback chaining. When command is dispatched all chained callbacks would fire.
  /// </summary>
  LINKED_COMMAND = 1UL << 0,

  /// <summary>
  /// Hidden in released products. Flag is removed automatically if ALLOW_DEVELOPMENT_CVARS is defined.
  /// </summary>
  DEVELOPMENT_ONLY = 1UL << 1,

  /// <summary>
  /// Defined by the game DLL.
  /// </summary>
  GAMEDLL = 1UL << 2,

  /// <summary>
  /// Defined by the client DLL.
  /// </summary>
  CLIENTDLL = 1UL << 3,

  /// <summary>
  /// Hidden. Doesn't appear in find or auto complete. Like DEVELOPMENTONLY, but can't be compiled out.
  /// </summary>
  HIDDEN = 1UL << 4,

  /// <summary>
  /// It's a server cvar, but we don't send the data since it's a password, etc.  Sends 1 if it's not bland/zero, 0 otherwise as value.
  /// </summary>
  PROTECTED = 1UL << 5,

  /// <summary>
  /// This cvar cannot be changed by clients connected to a multiplayer server.
  /// </summary>
  SPONLY = 1UL << 6,

  /// <summary>
  /// Set to cause it to be saved to vars.rc.
  /// </summary>
  ARCHIVE = 1UL << 7,

  /// <summary>
  /// Notifies players when changed.
  /// </summary>
  NOTIFY = 1UL << 8,

  /// <summary>
  /// Changes the client's info string
  /// </summary>
  USERINFO = 1UL << 9,

  /// <summary>
  /// Means cvar is a reference, usually used to get a cvar reference of a cvar registered in other module,
  /// and is temporary until the actual cvar was registered.
  /// </summary>
  REFERENCE = 1UL << 10,

  /// <summary>
  /// If this is a FCVAR_SERVER, don't log changes to the log file / console if we are creating a log.
  /// </summary>
  UNLOGGED = 1UL << 11,

  /// <summary>
  /// Is set for a first convar SetValue either with its default_value or with a value from a gameinfo.
  /// Mostly for callbacks to check for.
  /// </summary>
  INITIAL_SETVALUE = 1UL << 12,

  /// <summary>
  /// Server setting enforced on clients. Values are replicated from server to clients.
  /// </summary>
  REPLICATED = 1UL << 13,

  /// <summary>
  /// Only usable in singleplayer/debug or when sv_cheats is enabled.
  /// </summary>
  CHEAT = 1UL << 14,

  /// <summary>
  /// Causes per-user variants (e.g. varname2..N for splitscreen) to be autogenerated.
  /// </summary>
  PER_USER = 1UL << 15,

  /// <summary>
  /// Record this convar when starting a demo file.
  /// </summary>
  DEMO = 1UL << 16,

  /// <summary>
  /// Do not record this command in demo files.
  /// </summary>
  DONTRECORD = 1UL << 17,

  /// <summary>
  /// Set when cvar is executing callbacks; value sets during callbacks are queued until callbacks finish.
  /// </summary>
  PERFORMING_CALLBACKS = 1UL << 18,

  /// <summary>
  /// Only cvars tagged with this are available to customers.
  /// </summary>
  RELEASE = 1UL << 19,

  /// <summary>
  /// Show as a menu bar item.
  /// </summary>
  MENUBAR_ITEM = 1UL << 20,

  /// <summary>
  /// If set via launch options, value will not be reset by ResetConVarsToDefaultValuesByFlag.
  /// </summary>
  COMMANDLINE_ENFORCED = 1UL << 21,

  /// <summary>
  /// Cvar cannot be changed by a client that is connected to a server.
  /// </summary>
  NOT_CONNECTED = 1UL << 22,

  /// <summary>
  /// Enable fuzzy matching in vconsole.
  /// </summary>
  VCONSOLE_FUZZY_MATCHING = 1UL << 23,

  /// <summary>
  /// The server is allowed to execute this command on clients via ClientCommand/NET_StringCmd/CBaseClientState::ProcessStringCmd.
  /// </summary>
  SERVER_CAN_EXECUTE = 1UL << 24,

  /// <summary>
  /// Assigned to commands to let clients execute them.
  /// </summary>
  CLIENT_CAN_EXECUTE = 1UL << 25,

  /// <summary>
  /// If this is set, then the server is not allowed to query this cvar's value.
  /// </summary>
  SERVER_CANNOT_QUERY = 1UL << 26,

  /// <summary>
  /// vconsole set focus.
  /// </summary>
  VCONSOLE_SET_FOCUS = 1UL << 27,

  /// <summary>
  /// IVEngineClient::ClientCmd is allowed to execute this command.
  /// </summary>
  CLIENTCMD_CAN_EXECUTE = 1UL << 28,

  /// <summary>
  /// Execute per tick.
  /// </summary>
  EXECUTE_PER_TICK = 1UL << 29,

  /// <summary>
  /// Defensive flag.
  /// </summary>
  DEFENSIVE = 1UL << 32

}