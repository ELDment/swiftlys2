// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.SchemaDefinitions;

namespace SwiftlyS2.Shared.SchemaDefinitions;

public partial interface CBasePropDoor : CDynamicProp, ISchemaClass<CBasePropDoor> {

  static CBasePropDoor ISchemaClass<CBasePropDoor>.From(nint handle) => new CBasePropDoorImpl(handle);

  
  public ref float AutoReturnDelay { get; }
  
  public ref CUtlVector<CHandle<CBasePropDoor>> DoorList { get; }
  
  public ref int HardwareType { get; }
  
  public ref bool NeedsHardware { get; }
  
  public ref DoorState_t DoorState { get; }
  
  public ref bool Locked { get; }
  
  public ref bool NoNPCs { get; }
  
  public ref Vector ClosedPosition { get; }
  
  public ref QAngle ClosedAngles { get; }
  
  public ref CHandle<CBaseEntity> Blocker { get; }
  
  public ref bool FirstBlocked { get; }
  
  public locksound_t Ls { get; }
  
  public ref bool ForceClosed { get; }
  
  public ref Vector LatchWorldPosition { get; }
  
  public ref CHandle<CBaseEntity> Activator { get; }
  
  public ref CUtlSymbolLarge SoundMoving { get; }
  
  public ref CUtlSymbolLarge SoundOpen { get; }
  
  public ref CUtlSymbolLarge SoundClose { get; }
  
  public ref CUtlSymbolLarge SoundLock { get; }
  
  public ref CUtlSymbolLarge SoundUnlock { get; }
  
  public ref CUtlSymbolLarge SoundLatch { get; }
  
  public ref CUtlSymbolLarge SoundPound { get; }
  
  public ref CUtlSymbolLarge SoundJiggle { get; }
  
  public ref CUtlSymbolLarge SoundLockedAnim { get; }
  
  public ref int NumCloseAttempts { get; }
  
  public ref CUtlStringToken PhysicsMaterial { get; }
  
  public ref CUtlSymbolLarge SlaveName { get; }
  
  public ref CHandle<CBasePropDoor> Master { get; }
  
  public CEntityIOOutput OnBlockedClosing { get; }
  
  public CEntityIOOutput OnBlockedOpening { get; }
  
  public CEntityIOOutput OnUnblockedClosing { get; }
  
  public CEntityIOOutput OnUnblockedOpening { get; }
  
  public CEntityIOOutput OnFullyClosed { get; }
  
  public CEntityIOOutput OnFullyOpen { get; }
  
  public CEntityIOOutput OnClose { get; }
  
  public CEntityIOOutput OnOpen { get; }
  
  public CEntityIOOutput OnLockedUse { get; }
  
  public CEntityIOOutput OnAjarOpen { get; }

  public void DoorStateUpdated();
  public void LockedUpdated();
  public void NoNPCsUpdated();
  public void ClosedPositionUpdated();
  public void ClosedAnglesUpdated();
  public void MasterUpdated();
}