// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_SetControlPointPositionsImpl : CParticleFunctionPreEmissionImpl, C_OP_SetControlPointPositions {

  public C_OP_SetControlPointPositionsImpl(nint handle) : base(handle) {
  }

  public ref bool UseWorldLocation {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x12B1A872F371AED7));
  }
  public ref bool Orient {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x12B1A8727CD61854));
  }
  public ref bool SetOnce {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x12B1A8726B261086));
  }
  public ref int CP1 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x12B1A872D4B1E579));
  }
  public ref int CP2 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x12B1A872D1B1E0C0));
  }
  public ref int CP3 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x12B1A872D2B1E253));
  }
  public ref int CP4 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x12B1A872D7B1EA32));
  }
  public ref Vector CP1Pos {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x12B1A872408288D9));
  }
  public ref Vector CP2Pos {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x12B1A872862C8D46));
  }
  public ref Vector CP3Pos {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x12B1A872E3C5304F));
  }
  public ref Vector CP4Pos {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x12B1A872A5E5E51C));
  }
  public ref int HeadLocation {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x12B1A872A8ECDA78));
  }


}