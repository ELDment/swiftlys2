// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class VMixDynamicsCompressorDesc_tImpl : SchemaClass, VMixDynamicsCompressorDesc_t {

  public VMixDynamicsCompressorDesc_tImpl(nint handle) : base(handle) {
  }

  public ref float FldbOutputGain {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D50067F97C23));
  }
  public ref float FldbCompressionThreshold {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D500C45CDA7C));
  }
  public ref float FldbKneeWidth {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D50035532FF2));
  }
  public ref float CompressionRatio {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D5008B1A1E1A));
  }
  public ref float AttackTimeMS {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D500D4A28216));
  }
  public ref float ReleaseTimeMS {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D500EBB62791));
  }
  public ref float RMSTimeMS {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D500FB749526));
  }
  public ref float WetMix {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4AC2D500D5453C15));
  }
  public ref bool PeakMode {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x4AC2D50087DF35F9));
  }


}