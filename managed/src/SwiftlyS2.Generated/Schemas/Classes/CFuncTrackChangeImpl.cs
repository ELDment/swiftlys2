// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CFuncTrackChangeImpl : CFuncPlatRotImpl, CFuncTrackChange {

  public CFuncTrackChangeImpl(nint handle) : base(handle) {
  }

  public CPathTrack? TrackTop {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x25A8A26FF7C2CCBF));
      return ptr.IsValidPtr() ? new CPathTrackImpl(ptr) : null;
    }
  }
  public CPathTrack? TrackBottom {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x25A8A26F37EC7637));
      return ptr.IsValidPtr() ? new CPathTrackImpl(ptr) : null;
    }
  }
  public CFuncTrackTrain? Train {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x25A8A26FB8642689));
      return ptr.IsValidPtr() ? new CFuncTrackTrainImpl(ptr) : null;
    }
  }
  public string TrackTopName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x25A8A26FF9BD489C));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x25A8A26FF9BD489C, value);
  } 
  public string TrackBottomName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x25A8A26F7F34C2D4));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x25A8A26F7F34C2D4, value);
  } 
  public string TrainName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x25A8A26FA3DC4C82));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x25A8A26FA3DC4C82, value);
  } 
  public ref TRAIN_CODE Code {
    get => ref _Handle.AsRef<TRAIN_CODE>(Schema.GetOffset(0x25A8A26FB70C9D94));
  }
  public ref int TargetState {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x25A8A26F9EA3444D));
  }
  public ref int Use {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x25A8A26F45B2B614));
  }


}