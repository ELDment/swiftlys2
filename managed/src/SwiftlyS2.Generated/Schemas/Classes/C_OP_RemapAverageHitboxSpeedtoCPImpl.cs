// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_RemapAverageHitboxSpeedtoCPImpl : CParticleFunctionPreEmissionImpl, C_OP_RemapAverageHitboxSpeedtoCP {

  public C_OP_RemapAverageHitboxSpeedtoCPImpl(nint handle) : base(handle) {
  }

  public ref int InControlPointNumber {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xE6055FBCE7CB99DE));
  }
  public ref int OutControlPointNumber {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xE6055FBCD021D73F));
  }
  public ref int Field {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xE6055FBCC257B93B));
  }
  public ref ParticleHitboxDataSelection_t HitboxDataType {
    get => ref _Handle.AsRef<ParticleHitboxDataSelection_t>(Schema.GetOffset(0xE6055FBCAB1666E3));
  }
  public CParticleCollectionFloatInput InputMin {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE6055FBCE88A0D0F));
  }
  public CParticleCollectionFloatInput InputMax {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE6055FBCD6766901));
  }
  public CParticleCollectionFloatInput OutputMin {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE6055FBC5F8D7716));
  }
  public CParticleCollectionFloatInput OutputMax {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE6055FBC51A0E8C4));
  }
  public ref int HeightControlPointNumber {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xE6055FBCF2D4BC82));
  }
  public CParticleCollectionVecInput ComparisonVelocity {
    get => new CParticleCollectionVecInputImpl(_Handle + Schema.GetOffset(0xE6055FBC23BF409F));
  }
public string HitboxSetName {
    get {
      var ptr = _Handle + Schema.GetOffset(0xE6055FBC6A21BB0E);
      return Schema.GetString(ptr);
    }
    set => Schema.SetFixedString(_Handle, 0xE6055FBC6A21BB0E, value, 128);
  } 


}