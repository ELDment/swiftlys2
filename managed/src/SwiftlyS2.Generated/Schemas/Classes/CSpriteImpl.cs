// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CSpriteImpl : CBaseModelEntityImpl, CSprite {

  public CSpriteImpl(nint handle) : base(handle) {
  }

  public ref CStrongHandle<InfoForResourceTypeIMaterial2> SpriteMaterial {
    get => ref _Handle.AsRef<CStrongHandle<InfoForResourceTypeIMaterial2>>(Schema.GetOffset(0xAAF88CE378793443));
  }
  public ref CHandle<CBaseEntity> AttachedToEntity {
    get => ref _Handle.AsRef<CHandle<CBaseEntity>>(Schema.GetOffset(0xAAF88CE3FDEAA64D));
  }
  public AttachmentHandle_t Attachment {
    get => new AttachmentHandle_tImpl(_Handle + Schema.GetOffset(0xAAF88CE3E3BF4024));
  }
  public ref float SpriteFramerate {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE3E156249D));
  }
  public ref float Frame {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE3F836C9F4));
  }
  public GameTime_t DieTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xAAF88CE361B33206));
  }
  public ref uint Brightness {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0xAAF88CE3A4C26AE6));
  }
  public ref float BrightnessDuration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE36700BD7C));
  }
  public ref float SpriteScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE3E39D2B84));
  }
  public ref float ScaleDuration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE35F21994B));
  }
  public ref bool WorldSpaceScale {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xAAF88CE37E045A3F));
  }
  public ref float GlowProxySize {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE3C4210897));
  }
  public ref float HDRColorScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE3C930B3E8));
  }
  public GameTime_t LastTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xAAF88CE32E79549E));
  }
  public ref float MaxFrame {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE397F185CC));
  }
  public ref float StartScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE3634567D1));
  }
  public ref float DestScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAAF88CE341A20F83));
  }
  public GameTime_t ScaleTimeStart {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xAAF88CE303EA4A2E));
  }
  public ref int StartBrightness {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xAAF88CE3A9C01268));
  }
  public ref int DestBrightness {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xAAF88CE38627AE5E));
  }
  public GameTime_t BrightnessTimeStart {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xAAF88CE3478AFDAF));
  }
  public ref int SpriteWidth {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xAAF88CE3F10EC104));
  }
  public ref int SpriteHeight {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xAAF88CE36BAED033));
  }

  public void SpriteMaterialUpdated() {
    Schema.Update(_Handle, 0xAAF88CE378793443);
  }
  public void AttachedToEntityUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3FDEAA64D);
  }
  public void AttachmentUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3E3BF4024);
  }
  public void SpriteFramerateUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3E156249D);
  }
  public void FrameUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3F836C9F4);
  }
  public void BrightnessUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3A4C26AE6);
  }
  public void BrightnessDurationUpdated() {
    Schema.Update(_Handle, 0xAAF88CE36700BD7C);
  }
  public void SpriteScaleUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3E39D2B84);
  }
  public void ScaleDurationUpdated() {
    Schema.Update(_Handle, 0xAAF88CE35F21994B);
  }
  public void WorldSpaceScaleUpdated() {
    Schema.Update(_Handle, 0xAAF88CE37E045A3F);
  }
  public void GlowProxySizeUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3C4210897);
  }
  public void HDRColorScaleUpdated() {
    Schema.Update(_Handle, 0xAAF88CE3C930B3E8);
  }
}