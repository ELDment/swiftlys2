// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CReplicationParametersImpl : SchemaClass, CReplicationParameters {

  public CReplicationParametersImpl(nint handle) : base(handle) {
  }

  public ref ParticleReplicationMode_t ReplicationMode {
    get => ref _Handle.AsRef<ParticleReplicationMode_t>(Schema.GetOffset(0xFA909F20C8967832));
  }
  public ref bool ScaleChildParticleRadii {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFA909F207842F3CC));
  }
  public CParticleCollectionFloatInput MinRandomRadiusScale {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xFA909F208CBF88EE));
  }
  public CParticleCollectionFloatInput MaxRandomRadiusScale {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xFA909F2022697B5C));
  }
  public CParticleCollectionVecInput MinRandomDisplacement {
    get => new CParticleCollectionVecInputImpl(_Handle + Schema.GetOffset(0xFA909F20808FB77F));
  }
  public CParticleCollectionVecInput MaxRandomDisplacement {
    get => new CParticleCollectionVecInputImpl(_Handle + Schema.GetOffset(0xFA909F20FF279F49));
  }
  public CParticleCollectionFloatInput ModellingScale {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xFA909F20BE93B72A));
  }


}