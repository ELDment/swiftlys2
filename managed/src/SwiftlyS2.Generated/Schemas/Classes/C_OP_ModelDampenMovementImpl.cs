// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_ModelDampenMovementImpl : CParticleFunctionOperatorImpl, C_OP_ModelDampenMovement {

  public C_OP_ModelDampenMovementImpl(nint handle) : base(handle) {
  }

  public ref int ControlPointNumber {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x74BD8BB63F31A6BD));
  }
  public ref bool BoundBox {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x74BD8BB6AB65CDDC));
  }
  public ref bool Outside {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x74BD8BB6733FEEA4));
  }
  public ref bool UseBones {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x74BD8BB610D1938B));
  }
public string HitboxSetName {
    get {
      var ptr = _Handle + Schema.GetOffset(0x74BD8BB66A21BB0E);
      return Schema.GetString(ptr);
    }
    set => Schema.SetFixedString(_Handle, 0x74BD8BB66A21BB0E, value, 128);
  } 
  public CPerParticleVecInput PosOffset {
    get => new CPerParticleVecInputImpl(_Handle + Schema.GetOffset(0x74BD8BB655D114B6));
  }
  public ref float Drag {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x74BD8BB650DA6497));
  }


}