// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CPulseGraphInstance_ServerEntityImpl : CBasePulseGraphInstanceImpl, CPulseGraphInstance_ServerEntity {

  public CPulseGraphInstance_ServerEntityImpl(nint handle) : base(handle) {
  }

  public ref CHandle<CBaseEntity> Owner {
    get => ref _Handle.AsRef<CHandle<CBaseEntity>>(Schema.GetOffset(0x6DFF458BF6D89572));
  }
  public ref bool Activated {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x6DFF458BF8E37A5C));
  }
  public string NameFixupStaticPrefix {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x6DFF458BFFD2D6AB));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x6DFF458BFFD2D6AB, value);
  } 
  public string NameFixupParent {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x6DFF458B7B08ECF1));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x6DFF458B7B08ECF1, value);
  } 
  public string NameFixupLocal {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x6DFF458B508F29A4));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x6DFF458B508F29A4, value);
  } 
  public string ProceduralWorldNameForRelays {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x6DFF458B05373F31));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x6DFF458B05373F31, value);
  } 


}