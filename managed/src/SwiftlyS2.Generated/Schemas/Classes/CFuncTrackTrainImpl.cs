// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CFuncTrackTrainImpl : CBaseModelEntityImpl, CFuncTrackTrain {

  public CFuncTrackTrainImpl(nint handle) : base(handle) {
  }

  public ref CHandle<CPathTrack> Ppath {
    get => ref _Handle.AsRef<CHandle<CPathTrack>>(Schema.GetOffset(0x416637FB5A26CD88));
  }
  public ref float Length {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB3AFED1B5));
  }
  public ref Vector PosPrev {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x416637FB359844A8));
  }
  public ref QAngle Prev {
    get => ref _Handle.AsRef<QAngle>(Schema.GetOffset(0x416637FB560A937E));
  }
  public ref Vector ControlMins {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x416637FB8E95DFBB));
  }
  public ref Vector ControlMaxs {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x416637FBE56D54C9));
  }
  public ref Vector LastBlockPos {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x416637FB93D6BD54));
  }
  public ref int LastBlockTick {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x416637FBBAD8855B));
  }
  public ref float Volume {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB7647E0C9));
  }
  public ref float Bank {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB80D0525D));
  }
  public ref float OldSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB6FB3C229));
  }
  public ref float BlockDamage {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FBA5348091));
  }
  public ref float Height {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB8A71EDE2));
  }
  public ref float MaxSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB992A9164));
  }
  public ref float Dir {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FBD9FF9EB4));
  }
  public ref CUtlSymbolLarge SoundMove {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0x416637FB73E14089));
  }
  public ref CUtlSymbolLarge SoundMovePing {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0x416637FB68B489FD));
  }
  public ref CUtlSymbolLarge SoundStart {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0x416637FB7CA15A30));
  }
  public ref CUtlSymbolLarge SoundStop {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0x416637FB34D8E0B4));
  }
  public ref CUtlSymbolLarge StrPathTarget {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0x416637FB7AF8129A));
  }
  public ref float MoveSoundMinDuration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB00A53693));
  }
  public ref float MoveSoundMaxDuration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FBA06C5829));
  }
  public GameTime_t NextMoveSoundTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0x416637FB05BD176B));
  }
  public ref float MoveSoundMinPitch {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FBFED455E3));
  }
  public ref float MoveSoundMaxPitch {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FBE1C88895));
  }
  public ref TrainOrientationType_t OrientationType {
    get => ref _Handle.AsRef<TrainOrientationType_t>(Schema.GetOffset(0x416637FB468ECE0A));
  }
  public ref TrainVelocityType_t VelocityType {
    get => ref _Handle.AsRef<TrainVelocityType_t>(Schema.GetOffset(0x416637FBA952DF0B));
  }
  public CEntityIOOutput OnStart {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0x416637FBC3FE848C));
  }
  public CEntityIOOutput OnNext {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0x416637FBFE51ADC1));
  }
  public CEntityIOOutput OnArrivedAtDestinationNode {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0x416637FBCAE21100));
  }
  public ref bool ManualSpeedChanges {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x416637FBB3C37B9B));
  }
  public ref float DesiredSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FBF7F86D26));
  }
  public GameTime_t SpeedChangeTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0x416637FBCC334417));
  }
  public ref float AccelSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FB345C91CC));
  }
  public ref float DecelSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x416637FBC85D7DF7));
  }
  public ref bool AccelToSpeed {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x416637FB540D38C1));
  }
  public GameTime_t NextMPSoundTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0x416637FB251847DB));
  }


}