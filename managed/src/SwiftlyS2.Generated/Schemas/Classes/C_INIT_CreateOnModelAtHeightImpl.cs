// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_INIT_CreateOnModelAtHeightImpl : CParticleFunctionInitializerImpl, C_INIT_CreateOnModelAtHeight {

  public C_INIT_CreateOnModelAtHeightImpl(nint handle) : base(handle) {
  }

  public ref bool UseBones {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xBB8B79F610D1938B));
  }
  public ref bool ForceZ {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xBB8B79F6A3DF359A));
  }
  public ref int ControlPointNumber {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xBB8B79F63F31A6BD));
  }
  public ref int HeightCP {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xBB8B79F6943E048D));
  }
  public ref bool UseWaterHeight {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xBB8B79F616CA1A0C));
  }
  public CParticleCollectionFloatInput DesiredHeight {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xBB8B79F6D72286F4));
  }
  public CParticleCollectionVecInput HitBoxScale {
    get => new CParticleCollectionVecInputImpl(_Handle + Schema.GetOffset(0xBB8B79F658EE3FB7));
  }
  public CParticleCollectionVecInput DirectionBias {
    get => new CParticleCollectionVecInputImpl(_Handle + Schema.GetOffset(0xBB8B79F65A1697CF));
  }
  public ref ParticleHitboxBiasType_t BiasType {
    get => ref _Handle.AsRef<ParticleHitboxBiasType_t>(Schema.GetOffset(0xBB8B79F65FAB0448));
  }
  public ref bool LocalCoords {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xBB8B79F630E716DE));
  }
  public ref bool PreferMovingBoxes {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xBB8B79F68F1573EE));
  }
public string HitboxSetName {
    get {
      var ptr = _Handle + Schema.GetOffset(0xBB8B79F66A21BB0E);
      return Schema.GetString(ptr);
    }
    set => Schema.SetFixedString(_Handle, 0xBB8B79F66A21BB0E, value, 128);
  } 
  public CParticleCollectionFloatInput HitboxVelocityScale {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xBB8B79F65BE2EDCC));
  }
  public CParticleCollectionFloatInput MaxBoneVelocity {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xBB8B79F660C6A35A));
  }


}