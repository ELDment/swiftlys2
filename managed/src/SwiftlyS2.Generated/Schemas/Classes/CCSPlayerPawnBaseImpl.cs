// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CCSPlayerPawnBaseImpl : CBasePlayerPawnImpl, CCSPlayerPawnBase {

  public CCSPlayerPawnBaseImpl(nint handle) : base(handle) {
  }

  public CTouchExpansionComponent CTouchExpansionComponent {
    get => new CTouchExpansionComponentImpl(_Handle + Schema.GetOffset(0xD8F889768A159531));
  }
  public CCSPlayer_PingServices? PingServices {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xD8F889767A1487DF));
      return ptr.IsValidPtr() ? new CCSPlayer_PingServicesImpl(ptr) : null;
    }
  }
  public GameTime_t BlindUntilTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xD8F889765869ECC5));
  }
  public GameTime_t BlindStartTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xD8F88976540D0351));
  }
  public ref CSPlayerState PlayerState {
    get => ref _Handle.AsRef<CSPlayerState>(Schema.GetOffset(0xD8F889769F641BBA));
  }
  public ref bool Respawning {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xD8F889769E9D7B99));
  }
  public ref bool HasMovedSinceSpawn {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xD8F889763D3B1C13));
  }
  public ref int NumSpawns {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xD8F8897605DCE1E8));
  }
  public ref float IdleTimeSinceLastAction {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD8F8897672DE4B20));
  }
  public ref float NextRadarUpdateTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD8F889760D6C11B8));
  }
  public ref float FlashDuration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD8F88976E5A995FB));
  }
  public ref float FlashMaxAlpha {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD8F889763DCF0D29));
  }
  public ref float ProgressBarStartTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD8F889768148DE8E));
  }
  public ref int ProgressBarDuration {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xD8F88976BCF340B0));
  }
  public ref CHandle<CCSPlayerController> OriginalController {
    get => ref _Handle.AsRef<CHandle<CCSPlayerController>>(Schema.GetOffset(0xD8F88976511FAE4C));
  }

  public void CTouchExpansionComponentUpdated() {
    Schema.Update(_Handle, 0xD8F889768A159531);
  }
  public void PingServicesUpdated() {
    Schema.Update(_Handle, 0xD8F889767A1487DF);
  }
  public void PlayerStateUpdated() {
    Schema.Update(_Handle, 0xD8F889769F641BBA);
  }
  public void HasMovedSinceSpawnUpdated() {
    Schema.Update(_Handle, 0xD8F889763D3B1C13);
  }
  public void FlashDurationUpdated() {
    Schema.Update(_Handle, 0xD8F88976E5A995FB);
  }
  public void FlashMaxAlphaUpdated() {
    Schema.Update(_Handle, 0xD8F889763DCF0D29);
  }
  public void ProgressBarStartTimeUpdated() {
    Schema.Update(_Handle, 0xD8F889768148DE8E);
  }
  public void ProgressBarDurationUpdated() {
    Schema.Update(_Handle, 0xD8F88976BCF340B0);
  }
  public void OriginalControllerUpdated() {
    Schema.Update(_Handle, 0xD8F88976511FAE4C);
  }
}