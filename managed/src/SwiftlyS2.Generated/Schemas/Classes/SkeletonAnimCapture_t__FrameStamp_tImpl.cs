// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class SkeletonAnimCapture_t__FrameStamp_tImpl : SchemaClass, SkeletonAnimCapture_t__FrameStamp_t {

  public SkeletonAnimCapture_t__FrameStamp_tImpl(nint handle) : base(handle) {
  }

  public ref float Time {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4ECAEB4FC957229E));
  }
  public ref float EntitySimTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4ECAEB4FAE2BAB2E));
  }
  public ref bool TeleportTick {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x4ECAEB4F7068242B));
  }
  public ref bool Predicted {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x4ECAEB4F419B6D9B));
  }
  public ref float CurTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4ECAEB4F08036F9A));
  }
  public ref float RealTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4ECAEB4F1168EC02));
  }
  public ref int FrameCount {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x4ECAEB4F1DBCD049));
  }
  public ref int TickCount {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x4ECAEB4FE25E6B27));
  }


}