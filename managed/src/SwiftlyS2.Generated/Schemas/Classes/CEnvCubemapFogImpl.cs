// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CEnvCubemapFogImpl : CBaseEntityImpl, CEnvCubemapFog {

  public CEnvCubemapFogImpl(nint handle) : base(handle) {
  }

  public ref float EndDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692EB825C247));
  }
  public ref float StartDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692E796C8142));
  }
  public ref float FogFalloffExponent {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692E2068A39A));
  }
  public ref bool HeightFogEnabled {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x38A7692EFB7ED9F7));
  }
  public ref float FogHeightWidth {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692E07936DE2));
  }
  public ref float FogHeightEnd {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692E16176853));
  }
  public ref float FogHeightStart {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692ED4580CB6));
  }
  public ref float FogHeightExponent {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692E0864DD39));
  }
  public ref float LODBias {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692E6917C8A7));
  }
  public ref bool Active {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x38A7692E8334208F));
  }
  public ref bool StartDisabled {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x38A7692E61ED0C4F));
  }
  public ref float FogMaxOpacity {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x38A7692E7BF7FD56));
  }
  public ref int CubemapSourceType {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x38A7692E30B17317));
  }
  public ref CStrongHandle<InfoForResourceTypeIMaterial2> SkyMaterial {
    get => ref _Handle.AsRef<CStrongHandle<InfoForResourceTypeIMaterial2>>(Schema.GetOffset(0x38A7692EC887319D));
  }
  public string SkyEntity {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x38A7692E2BD44B1D));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x38A7692E2BD44B1D, value);
  } 
  public ref CStrongHandle<InfoForResourceTypeCTextureBase> FogCubemapTexture {
    get => ref _Handle.AsRef<CStrongHandle<InfoForResourceTypeCTextureBase>>(Schema.GetOffset(0x38A7692E3470DA4D));
  }
  public ref bool HasHeightFogEnd {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x38A7692E3484C961));
  }
  public ref bool FirstTime {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x38A7692ED23C3138));
  }

  public void EndDistanceUpdated() {
    Schema.Update(_Handle, 0x38A7692EB825C247);
  }
  public void StartDistanceUpdated() {
    Schema.Update(_Handle, 0x38A7692E796C8142);
  }
  public void FogFalloffExponentUpdated() {
    Schema.Update(_Handle, 0x38A7692E2068A39A);
  }
  public void HeightFogEnabledUpdated() {
    Schema.Update(_Handle, 0x38A7692EFB7ED9F7);
  }
  public void FogHeightWidthUpdated() {
    Schema.Update(_Handle, 0x38A7692E07936DE2);
  }
  public void FogHeightEndUpdated() {
    Schema.Update(_Handle, 0x38A7692E16176853);
  }
  public void FogHeightStartUpdated() {
    Schema.Update(_Handle, 0x38A7692ED4580CB6);
  }
  public void FogHeightExponentUpdated() {
    Schema.Update(_Handle, 0x38A7692E0864DD39);
  }
  public void LODBiasUpdated() {
    Schema.Update(_Handle, 0x38A7692E6917C8A7);
  }
  public void ActiveUpdated() {
    Schema.Update(_Handle, 0x38A7692E8334208F);
  }
  public void StartDisabledUpdated() {
    Schema.Update(_Handle, 0x38A7692E61ED0C4F);
  }
  public void FogMaxOpacityUpdated() {
    Schema.Update(_Handle, 0x38A7692E7BF7FD56);
  }
  public void CubemapSourceTypeUpdated() {
    Schema.Update(_Handle, 0x38A7692E30B17317);
  }
  public void SkyMaterialUpdated() {
    Schema.Update(_Handle, 0x38A7692EC887319D);
  }
  public void SkyEntityUpdated() {
    Schema.Update(_Handle, 0x38A7692E2BD44B1D);
  }
  public void FogCubemapTextureUpdated() {
    Schema.Update(_Handle, 0x38A7692E3470DA4D);
  }
  public void HasHeightFogEndUpdated() {
    Schema.Update(_Handle, 0x38A7692E3484C961);
  }
}