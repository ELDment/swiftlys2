// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CSeqMultiFetchImpl : SchemaClass, CSeqMultiFetch {

  public CSeqMultiFetchImpl(nint handle) : base(handle) {
  }

  public CSeqMultiFetchFlag Flags {
    get => new CSeqMultiFetchFlagImpl(_Handle + Schema.GetOffset(0x3846FD62DC74A14C));
  }
  public ref CUtlVector<short> LocalReferenceArray {
    get => ref _Handle.AsRef<CUtlVector<short>>(Schema.GetOffset(0x3846FD6290C98686));
  }
public ISchemaFixedArray<int> GroupSize {
    get => new SchemaFixedArray<int>(_Handle, 0x3846FD6258533CF9, 2, 4, 4);
  }
public ISchemaFixedArray<int> LocalPose {
    get => new SchemaFixedArray<int>(_Handle, 0x3846FD6270BF8111, 2, 4, 4);
  }
  public ref CUtlVector<float> PoseKeyArray0 {
    get => ref _Handle.AsRef<CUtlVector<float>>(Schema.GetOffset(0x3846FD62E139B398));
  }
  public ref CUtlVector<float> PoseKeyArray1 {
    get => ref _Handle.AsRef<CUtlVector<float>>(Schema.GetOffset(0x3846FD62E239B52B));
  }
  public ref int LocalCyclePoseParameter {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x3846FD62722CCD8E));
  }
  public ref bool CalculatePoseParameters {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x3846FD6259BED3FE));
  }
  public ref bool FixedBlendWeight {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x3846FD626C68A6B4));
  }
public ISchemaFixedArray<float> FixedBlendWeightVals {
    get => new SchemaFixedArray<float>(_Handle, 0x3846FD6221B3BB76, 2, 4, 4);
  }


}