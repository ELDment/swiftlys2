// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CTriggerSndSosOpvarImpl : CBaseTriggerImpl, CTriggerSndSosOpvar {

  public CTriggerSndSosOpvarImpl(nint handle) : base(handle) {
  }

  public ref CUtlVector<CHandle<CBaseEntity>> TouchingPlayers {
    get => ref _Handle.AsRef<CUtlVector<CHandle<CBaseEntity>>>(Schema.GetOffset(0xD4B7BEBCD365BA28));
  }
  public ref Vector Position {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xD4B7BEBC4142D14C));
  }
  public ref float CenterSize {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD4B7BEBC253C84EB));
  }
  public ref float MinVal {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD4B7BEBC9A76F478));
  }
  public ref float MaxVal {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD4B7BEBC8CE3891E));
  }
  public string OpvarName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xD4B7BEBC4ECBF7E4));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xD4B7BEBC4ECBF7E4, value);
  } 
  public string StackName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xD4B7BEBCC6D6063C));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xD4B7BEBCC6D6063C, value);
  } 
  public string OperatorName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xD4B7BEBCC4AA99BE));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xD4B7BEBCC4AA99BE, value);
  } 
  public ref bool VolIs2D {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xD4B7BEBC384D3350));
  }
public string OpvarNameChar {
    get {
      var ptr = _Handle + Schema.GetOffset(0xD4B7BEBC55F3CFF0);
      return Schema.GetString(ptr);
    }
    set => Schema.SetFixedString(_Handle, 0xD4B7BEBC55F3CFF0, value, 256);
  } 
public string StackNameChar {
    get {
      var ptr = _Handle + Schema.GetOffset(0xD4B7BEBC87998C38);
      return Schema.GetString(ptr);
    }
    set => Schema.SetFixedString(_Handle, 0xD4B7BEBC87998C38, value, 256);
  } 
public string OperatorNameChar {
    get {
      var ptr = _Handle + Schema.GetOffset(0xD4B7BEBC9824CD12);
      return Schema.GetString(ptr);
    }
    set => Schema.SetFixedString(_Handle, 0xD4B7BEBC9824CD12, value, 256);
  } 
  public ref Vector VecNormPos {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xD4B7BEBC66F7FECF));
  }
  public ref float NormCenterSize {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xD4B7BEBC3245C335));
  }


}