// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_INIT_RemapParticleCountToScalarImpl : CParticleFunctionInitializerImpl, C_INIT_RemapParticleCountToScalar {

  public C_INIT_RemapParticleCountToScalarImpl(nint handle) : base(handle) {
  }

  public ParticleAttributeIndex_t FieldOutput {
    get => new ParticleAttributeIndex_tImpl(_Handle + Schema.GetOffset(0xC0411DA9E5729606));
  }
  public ref int InputMin {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xC0411DA985E92181));
  }
  public ref int InputMax {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xC0411DA977FE262F));
  }
  public ref int ScaleControlPoint {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xC0411DA9B0577A70));
  }
  public ref int ScaleControlPointField {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xC0411DA9360C613C));
  }
  public ref float OutputMin {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xC0411DA95F8D7716));
  }
  public ref float OutputMax {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xC0411DA951A0E8C4));
  }
  public ref ParticleSetMethod_t SetMethod {
    get => ref _Handle.AsRef<ParticleSetMethod_t>(Schema.GetOffset(0xC0411DA9FB53C31E));
  }
  public ref bool ActiveRange {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xC0411DA93FA53B84));
  }
  public ref bool Invert {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xC0411DA9959F6101));
  }
  public ref bool Wrap {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xC0411DA94C8CA005));
  }
  public ref float RemapBias {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xC0411DA9490D7325));
  }


}