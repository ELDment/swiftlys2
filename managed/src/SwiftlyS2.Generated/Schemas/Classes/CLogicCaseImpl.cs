// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CLogicCaseImpl : CLogicalEntityImpl, CLogicCase {

  public CLogicCaseImpl(nint handle) : base(handle) {
  }

  public string Case {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x4B6BB20CBD726255));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x4B6BB20CBD726255, value);
  } 
  public ref int ShuffleCases {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x4B6BB20C3441354F));
  }
  public ref int LastShuffleCase {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x4B6BB20C053CE392));
  }
public ISchemaFixedArray<byte> UchShuffleCaseMap {
    get => new SchemaFixedArray<byte>(_Handle, 0x4B6BB20CF9FC41AE, 32, 1, 1);
  }
  public SchemaUntypedField OnCase {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x4B6BB20CF8743C7C));
  }
  public SchemaUntypedField OnDefault {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x4B6BB20C4B03C3CD));
  }


}