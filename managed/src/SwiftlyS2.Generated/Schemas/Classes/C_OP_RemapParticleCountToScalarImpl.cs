// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_RemapParticleCountToScalarImpl : CParticleFunctionOperatorImpl, C_OP_RemapParticleCountToScalar {

  public C_OP_RemapParticleCountToScalarImpl(nint handle) : base(handle) {
  }

  public ParticleAttributeIndex_t FieldOutput {
    get => new ParticleAttributeIndex_tImpl(_Handle + Schema.GetOffset(0x4DE6C52E5729606));
  }
  public CParticleCollectionFloatInput InputMin {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0x4DE6C5285E92181));
  }
  public CParticleCollectionFloatInput InputMax {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0x4DE6C5277FE262F));
  }
  public CParticleCollectionFloatInput OutputMin {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0x4DE6C525F8D7716));
  }
  public CParticleCollectionFloatInput OutputMax {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0x4DE6C5251A0E8C4));
  }
  public ref bool ActiveRange {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x4DE6C523FA53B84));
  }
  public ref ParticleSetMethod_t SetMethod {
    get => ref _Handle.AsRef<ParticleSetMethod_t>(Schema.GetOffset(0x4DE6C52FB53C31E));
  }


}