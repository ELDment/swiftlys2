// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CLogicBranchListImpl : CLogicalEntityImpl, CLogicBranchList {

  public CLogicBranchListImpl(nint handle) : base(handle) {
  }

public ISchemaFixedArray<CUtlSymbolLarge> LogicBranchNames {
    get => new SchemaFixedArray<CUtlSymbolLarge>(_Handle, 0xB21E12B82C1677D7, 16, 8, 8);
  }
  public ref CUtlVector<CHandle<CBaseEntity>> LogicBranchList {
    get => ref _Handle.AsRef<CUtlVector<CHandle<CBaseEntity>>>(Schema.GetOffset(0xB21E12B8E4DEC285));
  }
  public ref CLogicBranchList__LogicBranchListenerLastState_t LastState {
    get => ref _Handle.AsRef<CLogicBranchList__LogicBranchListenerLastState_t>(Schema.GetOffset(0xB21E12B89A391AC5));
  }
  public CEntityIOOutput OnAllTrue {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xB21E12B8419FFFAF));
  }
  public CEntityIOOutput OnAllFalse {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xB21E12B86EFCD332));
  }
  public CEntityIOOutput OnMixed {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xB21E12B8EBC72437));
  }


}