// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CEnvLaserImpl : CBeamImpl, CEnvLaser {

  public CEnvLaserImpl(nint handle) : base(handle) {
  }

  public string LaserTarget {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x83A2D3C8C257F4D));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x83A2D3C8C257F4D, value);
  } 
  public CSprite? Sprite {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x83A2D3CEFBFA166));
      return ptr.IsValidPtr() ? new CSpriteImpl(ptr) : null;
    }
  }
  public string SpriteName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x83A2D3C096530FF));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x83A2D3C096530FF, value);
  } 
  public ref Vector FirePosition {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x83A2D3C2A7C404E));
  }
  public ref float StartFrame {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x83A2D3CB534B906));
  }


}