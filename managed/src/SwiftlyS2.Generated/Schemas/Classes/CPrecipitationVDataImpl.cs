// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CPrecipitationVDataImpl : CEntitySubclassVDataBaseImpl, CPrecipitationVData {

  public CPrecipitationVDataImpl(nint handle) : base(handle) {
  }

  public SchemaUntypedField ParticlePrecipitationEffect {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x4F75C25D9E8770E0));
  }
  public ref float InnerDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x4F75C25D29845276));
  }
  public ref ParticleAttachment_t AttachType {
    get => ref _Handle.AsRef<ParticleAttachment_t>(Schema.GetOffset(0x4F75C25DC8613038));
  }
  public ref bool BatchSameVolumeType {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x4F75C25DDE7F21F7));
  }
  public ref int RTEnvCP {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x4F75C25D01881731));
  }
  public ref int RTEnvCPComponent {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x4F75C25D968B054C));
  }
  public string Modifier {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x4F75C25D2742E611));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x4F75C25D2742E611, value);
  } 


}