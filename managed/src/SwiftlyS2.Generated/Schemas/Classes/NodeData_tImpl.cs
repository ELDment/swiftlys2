// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class NodeData_tImpl : SchemaClass, NodeData_t {

  public NodeData_tImpl(nint handle) : base(handle) {
  }

  public ref int Parent {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xB09FAAA60AABB9D1));
  }
  public ref Vector Origin {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xB09FAAA6F26E589B));
  }
  public ref Vector MinBounds {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xB09FAAA6114799FE));
  }
  public ref Vector MaxBounds {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xB09FAAA6C0B4CE60));
  }
  public ref float MinimumDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xB09FAAA6D8B1200E));
  }
  public ref CUtlVector<int> ChildNodeIndices {
    get => ref _Handle.AsRef<CUtlVector<int>>(Schema.GetOffset(0xB09FAAA63648C692));
  }
  public string WorldNodePrefix {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xB09FAAA662126457));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xB09FAAA662126457, value);
  } 


}