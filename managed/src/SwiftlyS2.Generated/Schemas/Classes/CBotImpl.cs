// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CBotImpl : SchemaClass, CBot {

  public CBotImpl(nint handle) : base(handle) {
  }

  public CCSPlayerController Controller {
    get => new CCSPlayerControllerImpl(_Handle + Schema.GetOffset(0x804AC5DB8F2DD553));
  }
  public CCSPlayerPawn Player {
    get => new CCSPlayerPawnImpl(_Handle + Schema.GetOffset(0x804AC5DB2EC01D0E));
  }
  public ref bool HasSpawned {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x804AC5DBC2790687));
  }
  public ref uint Id {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x804AC5DBB4B6E980));
  }
  public ref bool IsRunning {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x804AC5DBE59BA57C));
  }
  public ref bool IsCrouching {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x804AC5DB7C7E997D));
  }
  public ref float ForwardSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x804AC5DBD8FEDBBD));
  }
  public ref float LeftSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x804AC5DBA7C6445B));
  }
  public ref float VerticalSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x804AC5DB379CEA66));
  }
  public ref ulong ButtonFlags {
    get => ref _Handle.AsRef<ulong>(Schema.GetOffset(0x804AC5DB82784FE8));
  }
  public ref float JumpTimestamp {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x804AC5DBA7C5ED0B));
  }
  public ref Vector ViewForward {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x804AC5DBA852BF65));
  }
  public ref int PostureStackIndex {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x804AC5DBCB65E443));
  }


}