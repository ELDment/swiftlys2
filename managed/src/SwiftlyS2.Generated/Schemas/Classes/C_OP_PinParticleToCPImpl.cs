// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_PinParticleToCPImpl : CParticleFunctionOperatorImpl, C_OP_PinParticleToCP {

  public C_OP_PinParticleToCPImpl(nint handle) : base(handle) {
  }

  public ref int ControlPointNumber {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xE4FC73983F31A6BD));
  }
  public CParticleCollectionVecInput Offset {
    get => new CParticleCollectionVecInputImpl(_Handle + Schema.GetOffset(0xE4FC7398BD25CC2A));
  }
  public ref bool OffsetLocal {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xE4FC7398F07D31C1));
  }
  public ref ParticleSelection_t ParticleSelection {
    get => ref _Handle.AsRef<ParticleSelection_t>(Schema.GetOffset(0xE4FC7398A2307EA7));
  }
  public CParticleCollectionFloatInput ParticleNumber {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE4FC739812F26402));
  }
  public ref ParticlePinDistance_t PinBreakType {
    get => ref _Handle.AsRef<ParticlePinDistance_t>(Schema.GetOffset(0xE4FC73981D66F607));
  }
  public CParticleCollectionFloatInput BreakDistance {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE4FC7398AD760DA9));
  }
  public CParticleCollectionFloatInput BreakSpeed {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE4FC739817DB9AD5));
  }
  public CParticleCollectionFloatInput Age {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE4FC73984F7B4AF6));
  }
  public ref int BreakControlPointNumber {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xE4FC739817C1EFA0));
  }
  public ref int BreakControlPointNumber2 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xE4FC7398F84C22D6));
  }
  public CParticleCollectionFloatInput BreakValue {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xE4FC7398D120F44B));
  }
  public CPerParticleFloatInput Interpolation {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xE4FC7398CF55B987));
  }
  public ref bool RetainInitialVelocity {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xE4FC73981B3893D3));
  }


}