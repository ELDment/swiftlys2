// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class RsBlendStateDesc_tImpl : SchemaClass, RsBlendStateDesc_t {

  public RsBlendStateDesc_tImpl(nint handle) : base(handle) {
  }

  public ref uint SrcBlendBits {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x5A78EC788B3147C4));
  }
  public ref uint DestBlendBits {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x5A78EC78E23CD0E0));
  }
  public ref uint SrcBlendAlphaBits {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x5A78EC78E2820E60));
  }
  public ref uint DestBlendAlphaBits {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x5A78EC784217BA4C));
  }
  public ref uint RenderTargetWriteMaskBits {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x5A78EC78CB45C38F));
  }
  public SchemaUntypedField BlendOpBits {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x5A78EC7824A9742B));
  }
  public SchemaUntypedField AlphaToCoverageEnable {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x5A78EC7860C58F3B));
  }
  public SchemaUntypedField IndependentBlendEnable {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x5A78EC78E42575C7));
  }
  public ref uint BlendOpAlphaBits {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x5A78EC788F0DF1ED));
  }
  public ref byte BlendEnableBits {
    get => ref _Handle.AsRef<byte>(Schema.GetOffset(0x5A78EC780FE207F3));
  }
  public ref byte SrgbWriteEnableBits {
    get => ref _Handle.AsRef<byte>(Schema.GetOffset(0x5A78EC783E54A99F));
  }


}