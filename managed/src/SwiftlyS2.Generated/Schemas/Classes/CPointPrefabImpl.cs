// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CPointPrefabImpl : CServerOnlyPointEntityImpl, CPointPrefab {

  public CPointPrefabImpl(nint handle) : base(handle) {
  }

  public string TargetMapName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x2C6EB7C6129742FD));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x2C6EB7C6129742FD, value);
  } 
  public string ForceWorldGroupID {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x2C6EB7C61F55F68E));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x2C6EB7C61F55F68E, value);
  } 
  public string AssociatedRelayTargetName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x2C6EB7C6A6960E7A));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x2C6EB7C6A6960E7A, value);
  } 
  public ref bool FixupNames {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x2C6EB7C6821D8FCF));
  }
  public ref bool LoadDynamic {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x2C6EB7C6A3437F12));
  }
  public ref CHandle<CPointPrefab> AssociatedRelayEntity {
    get => ref _Handle.AsRef<CHandle<CPointPrefab>>(Schema.GetOffset(0x2C6EB7C683435943));
  }


}