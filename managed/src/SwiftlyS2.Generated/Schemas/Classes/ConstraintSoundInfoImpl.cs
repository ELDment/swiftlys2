// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class ConstraintSoundInfoImpl : SchemaClass, ConstraintSoundInfo {

  public ConstraintSoundInfoImpl(nint handle) : base(handle) {
  }

  public VelocitySampler Sampler {
    get => new VelocitySamplerImpl(_Handle + Schema.GetOffset(0x79068C49FCCD6193));
  }
  public SimpleConstraintSoundProfile SoundProfile {
    get => new SimpleConstraintSoundProfileImpl(_Handle + Schema.GetOffset(0x79068C49D9300921));
  }
  public ref Vector ForwardAxis {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x79068C49DC95B25F));
  }
  public string TravelSoundFwd {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x79068C497A65F069));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x79068C497A65F069, value);
  } 
  public string TravelSoundBack {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x79068C49506B73E3));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x79068C49506B73E3, value);
  } 
  public string ReversalSounds {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x79068C49F5164187));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x79068C49F5164187, value);
  } 
  public ref bool PlayTravelSound {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x79068C49FF3432DE));
  }
  public ref bool PlayReversalSound {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x79068C4941EF4324));
  }


}