// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_ExternalWindForceImpl : CParticleFunctionForceImpl, C_OP_ExternalWindForce {

  public C_OP_ExternalWindForceImpl(nint handle) : base(handle) {
  }

  public CPerParticleVecInput SamplePosition {
    get => new CPerParticleVecInputImpl(_Handle + Schema.GetOffset(0xFE6646FBC3F6C534));
  }
  public CPerParticleVecInput Scale {
    get => new CPerParticleVecInputImpl(_Handle + Schema.GetOffset(0xFE6646FB5F596B51));
  }
  public ref bool SampleWind {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFE6646FB3C2A72D1));
  }
  public ref bool SampleWater {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFE6646FB97B80806));
  }
  public ref bool DampenNearWaterPlane {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFE6646FB974DA031));
  }
  public ref bool SampleGravity {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFE6646FB805373EF));
  }
  public CPerParticleVecInput GravityForce {
    get => new CPerParticleVecInputImpl(_Handle + Schema.GetOffset(0xFE6646FB2E2EF2C4));
  }
  public ref bool UseBasicMovementGravity {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFE6646FBC84E3D7B));
  }
  public CPerParticleFloatInput LocalGravityScale {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xFE6646FBD7EB148E));
  }
  public CPerParticleFloatInput LocalBuoyancyScale {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xFE6646FBC6A6171E));
  }
  public CPerParticleVecInput BuoyancyForce {
    get => new CPerParticleVecInputImpl(_Handle + Schema.GetOffset(0xFE6646FBCA7F361E));
  }


}