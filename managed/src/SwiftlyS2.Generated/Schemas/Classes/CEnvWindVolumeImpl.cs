// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CEnvWindVolumeImpl : CBaseEntityImpl, CEnvWindVolume {

  public CEnvWindVolumeImpl(nint handle) : base(handle) {
  }

  public ref bool Active {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xCD7AC5418334208F));
  }
  public ref Vector BoxMins {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xCD7AC541D8201373));
  }
  public ref Vector BoxMaxs {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xCD7AC541817A3B31));
  }
  public ref bool StartDisabled {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xCD7AC54161ED0C4F));
  }
  public ref int Shape {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xCD7AC54121208A02));
  }
  public ref float WindSpeedMultiplier {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xCD7AC541A22A3F81));
  }
  public ref float WindTurbulenceMultiplier {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xCD7AC54120DA30CD));
  }
  public ref float WindSpeedVariationMultiplier {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xCD7AC5416B9AC20C));
  }
  public ref float WindDirectionVariationMultiplier {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xCD7AC5417F3AB3AA));
  }

  public void ActiveUpdated() {
    Schema.Update(_Handle, 0xCD7AC5418334208F);
  }
  public void BoxMinsUpdated() {
    Schema.Update(_Handle, 0xCD7AC541D8201373);
  }
  public void BoxMaxsUpdated() {
    Schema.Update(_Handle, 0xCD7AC541817A3B31);
  }
  public void StartDisabledUpdated() {
    Schema.Update(_Handle, 0xCD7AC54161ED0C4F);
  }
  public void ShapeUpdated() {
    Schema.Update(_Handle, 0xCD7AC54121208A02);
  }
  public void WindSpeedMultiplierUpdated() {
    Schema.Update(_Handle, 0xCD7AC541A22A3F81);
  }
  public void WindTurbulenceMultiplierUpdated() {
    Schema.Update(_Handle, 0xCD7AC54120DA30CD);
  }
  public void WindSpeedVariationMultiplierUpdated() {
    Schema.Update(_Handle, 0xCD7AC5416B9AC20C);
  }
  public void WindDirectionVariationMultiplierUpdated() {
    Schema.Update(_Handle, 0xCD7AC5417F3AB3AA);
  }
}