// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CPulse_VariableImpl : SchemaClass, CPulse_Variable {

  public CPulse_VariableImpl(nint handle) : base(handle) {
  }

  public SchemaUntypedField Name {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x598DEA5CCAE8A266));
  }
  public string Description {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x598DEA5C678744E9));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x598DEA5C678744E9, value);
  } 
  public SchemaUntypedField Type {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x598DEA5C8ED6D5CD));
  }
  public SchemaUntypedField DefaultValue {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x598DEA5CC6E9593F));
  }
  public ref PulseVariableKeysSource_t KeysSource {
    get => ref _Handle.AsRef<PulseVariableKeysSource_t>(Schema.GetOffset(0x598DEA5CE4356F4C));
  }
  public ref bool IsPublicBlackboardVariable {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x598DEA5C9CD44561));
  }
  public ref bool IsObservable {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x598DEA5C60684D58));
  }
  public PulseDocNodeID_t EditorNodeID {
    get => new PulseDocNodeID_tImpl(_Handle + Schema.GetOffset(0x598DEA5C8D964CBD));
  }


}