// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CPointValueRemapperImpl : CBaseEntityImpl, CPointValueRemapper {

  public CPointValueRemapperImpl(nint handle) : base(handle) {
  }

  public ref bool Disabled {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA8CB433D3A7C5965));
  }
  public ref bool UpdateOnClient {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA8CB433DAF3BE806));
  }
  public ref ValueRemapperInputType_t InputType {
    get => ref _Handle.AsRef<ValueRemapperInputType_t>(Schema.GetOffset(0xA8CB433DBFD8A33F));
  }
  public ref CUtlSymbolLarge RemapLineStartName {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433DD35A8A1B));
  }
  public ref CUtlSymbolLarge RemapLineEndName {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433D104A9202));
  }
  public ref CHandle<CBaseEntity> RemapLineStart {
    get => ref _Handle.AsRef<CHandle<CBaseEntity>>(Schema.GetOffset(0xA8CB433D5B4CD88A));
  }
  public ref CHandle<CBaseEntity> RemapLineEnd {
    get => ref _Handle.AsRef<CHandle<CBaseEntity>>(Schema.GetOffset(0xA8CB433D696F1CDF));
  }
  public ref float MaximumChangePerSecond {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433D31BE784E));
  }
  public ref float DisengageDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433D4FB62599));
  }
  public ref float EngageDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433D79DA89F7));
  }
  public ref bool RequiresUseKey {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA8CB433D9780DD63));
  }
  public ref ValueRemapperOutputType_t OutputType {
    get => ref _Handle.AsRef<ValueRemapperOutputType_t>(Schema.GetOffset(0xA8CB433DA9E2FFB0));
  }
  public ref CUtlSymbolLarge OutputEntityName {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433D0F9F4D94));
  }
  public ref CUtlSymbolLarge OutputEntity2Name {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433D8D3AC53C));
  }
  public ref CUtlSymbolLarge OutputEntity3Name {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433D8F43AAE7));
  }
  public ref CUtlSymbolLarge OutputEntity4Name {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433DCCF46672));
  }
  public ref CUtlVector<CHandle<CBaseEntity>> OutputEntities {
    get => ref _Handle.AsRef<CUtlVector<CHandle<CBaseEntity>>>(Schema.GetOffset(0xA8CB433D7E483685));
  }
  public ref ValueRemapperHapticsType_t HapticsType {
    get => ref _Handle.AsRef<ValueRemapperHapticsType_t>(Schema.GetOffset(0xA8CB433D50735A5F));
  }
  public ref ValueRemapperMomentumType_t MomentumType {
    get => ref _Handle.AsRef<ValueRemapperMomentumType_t>(Schema.GetOffset(0xA8CB433D6875FE23));
  }
  public ref float MomentumModifier {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433DA9B3FFFC));
  }
  public ref float SnapValue {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433D6A65638C));
  }
  public ref float CurrentMomentum {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433DBCCCE092));
  }
  public ref ValueRemapperRatchetType_t RatchetType {
    get => ref _Handle.AsRef<ValueRemapperRatchetType_t>(Schema.GetOffset(0xA8CB433DCAD3FF06));
  }
  public ref float RatchetOffset {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433DDA07538B));
  }
  public ref float InputOffset {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433D857DD592));
  }
  public ref bool Engaged {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA8CB433D25A9B25E));
  }
  public ref bool FirstUpdate {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA8CB433DE5EB2E80));
  }
  public ref float PreviousValue {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433DB5220A7B));
  }
  public GameTime_t PreviousUpdateTickTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xA8CB433DB5083C83));
  }
  public ref Vector PreviousTestPoint {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xA8CB433DBD7D11C2));
  }
  public ref CHandle<CBasePlayerPawn> UsingPlayer {
    get => ref _Handle.AsRef<CHandle<CBasePlayerPawn>>(Schema.GetOffset(0xA8CB433D048D4614));
  }
  public ref float CustomOutputValue {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA8CB433D952E20FE));
  }
  public ref CUtlSymbolLarge SoundEngage {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433DA8AF4343));
  }
  public ref CUtlSymbolLarge SoundDisengage {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433DC289956F));
  }
  public ref CUtlSymbolLarge SoundReachedValueZero {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433D1C304389));
  }
  public ref CUtlSymbolLarge SoundReachedValueOne {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433D685D5F85));
  }
  public ref CUtlSymbolLarge SoundMovingLoop {
    get => ref _Handle.AsRef<CUtlSymbolLarge>(Schema.GetOffset(0xA8CB433D990A15C8));
  }
  public SchemaUntypedField Position {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0xA8CB433DFC27FA8A));
  }
  public SchemaUntypedField PositionDelta {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0xA8CB433DB249BB1C));
  }
  public CEntityIOOutput OnReachedValueZero {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xA8CB433D8746DCB5));
  }
  public CEntityIOOutput OnReachedValueOne {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xA8CB433D40852301));
  }
  public CEntityIOOutput OnReachedValueCustom {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xA8CB433DD209F610));
  }
  public CEntityIOOutput OnEngage {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xA8CB433DF404507F));
  }
  public CEntityIOOutput OnDisengage {
    get => new CEntityIOOutputImpl(_Handle + Schema.GetOffset(0xA8CB433D22E0E24B));
  }

  public void DisabledUpdated() {
    Schema.Update(_Handle, 0xA8CB433D3A7C5965);
  }
  public void UpdateOnClientUpdated() {
    Schema.Update(_Handle, 0xA8CB433DAF3BE806);
  }
  public void InputTypeUpdated() {
    Schema.Update(_Handle, 0xA8CB433DBFD8A33F);
  }
  public void RemapLineStartUpdated() {
    Schema.Update(_Handle, 0xA8CB433D5B4CD88A);
  }
  public void RemapLineEndUpdated() {
    Schema.Update(_Handle, 0xA8CB433D696F1CDF);
  }
  public void MaximumChangePerSecondUpdated() {
    Schema.Update(_Handle, 0xA8CB433D31BE784E);
  }
  public void DisengageDistanceUpdated() {
    Schema.Update(_Handle, 0xA8CB433D4FB62599);
  }
  public void EngageDistanceUpdated() {
    Schema.Update(_Handle, 0xA8CB433D79DA89F7);
  }
  public void RequiresUseKeyUpdated() {
    Schema.Update(_Handle, 0xA8CB433D9780DD63);
  }
  public void OutputTypeUpdated() {
    Schema.Update(_Handle, 0xA8CB433DA9E2FFB0);
  }
  public void OutputEntitiesUpdated() {
    Schema.Update(_Handle, 0xA8CB433D7E483685);
  }
  public void HapticsTypeUpdated() {
    Schema.Update(_Handle, 0xA8CB433D50735A5F);
  }
  public void MomentumTypeUpdated() {
    Schema.Update(_Handle, 0xA8CB433D6875FE23);
  }
  public void MomentumModifierUpdated() {
    Schema.Update(_Handle, 0xA8CB433DA9B3FFFC);
  }
  public void SnapValueUpdated() {
    Schema.Update(_Handle, 0xA8CB433D6A65638C);
  }
  public void RatchetTypeUpdated() {
    Schema.Update(_Handle, 0xA8CB433DCAD3FF06);
  }
  public void InputOffsetUpdated() {
    Schema.Update(_Handle, 0xA8CB433D857DD592);
  }
}