// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_INIT_DistanceToCPInitImpl : CParticleFunctionInitializerImpl, C_INIT_DistanceToCPInit {

  public C_INIT_DistanceToCPInitImpl(nint handle) : base(handle) {
  }

  public ParticleAttributeIndex_t FieldOutput {
    get => new ParticleAttributeIndex_tImpl(_Handle + Schema.GetOffset(0x59C1B9D5E5729606));
  }
  public CPerParticleFloatInput InputMin {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x59C1B9D5E88A0D0F));
  }
  public CPerParticleFloatInput InputMax {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x59C1B9D5D6766901));
  }
  public CPerParticleFloatInput OutputMin {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x59C1B9D55F8D7716));
  }
  public CPerParticleFloatInput OutputMax {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x59C1B9D551A0E8C4));
  }
  public ref int StartCP {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x59C1B9D52C2FF970));
  }
  public ref bool LOS {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x59C1B9D59C25C2ED));
  }
public ISchemaFixedString CollisionGroupName {
    get => new SchemaFixedString(_Handle, 0x59C1B9D5D58A3195, 128, 1, 1);
  }
  public ref ParticleTraceSet_t TraceSet {
    get => ref _Handle.AsRef<ParticleTraceSet_t>(Schema.GetOffset(0x59C1B9D5BD26C5B2));
  }
  public CPerParticleFloatInput MaxTraceLength {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x59C1B9D5543C3798));
  }
  public ref float LOSScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x59C1B9D5259F6F3B));
  }
  public ref ParticleSetMethod_t SetMethod {
    get => ref _Handle.AsRef<ParticleSetMethod_t>(Schema.GetOffset(0x59C1B9D5FB53C31E));
  }
  public ref bool ActiveRange {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x59C1B9D53FA53B84));
  }
  public ref Vector DistanceScale {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x59C1B9D5834BD798));
  }
  public ref float RemapBias {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x59C1B9D5490D7325));
  }


}