// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_INIT_CreationNoiseImpl : CParticleFunctionInitializerImpl, C_INIT_CreationNoise {

  public C_INIT_CreationNoiseImpl(nint handle) : base(handle) {
  }

  public ParticleAttributeIndex_t FieldOutput {
    get => new ParticleAttributeIndex_tImpl(_Handle + Schema.GetOffset(0x89BD0037E5729606));
  }
  public ref bool AbsVal {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x89BD0037AD2CCF0A));
  }
  public ref bool AbsValInv {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x89BD0037024BCB79));
  }
  public ref float Offset {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x89BD00377F14BA34));
  }
  public ref float OutputMin {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x89BD00375F8D7716));
  }
  public ref float OutputMax {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x89BD003751A0E8C4));
  }
  public ref float NoiseScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x89BD003732FE2EF3));
  }
  public ref float NoiseScaleLoc {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x89BD0037A9F4B0DF));
  }
  public ref Vector OffsetLoc {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x89BD0037EFAB26AC));
  }
  public ref float WorldTimeScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x89BD0037314F4986));
  }


}