// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CLookComponentUpdaterImpl : CAnimComponentUpdaterImpl, CLookComponentUpdater {

  public CLookComponentUpdaterImpl(nint handle) : base(handle) {
  }

  public CAnimParamHandle LookHeading {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996DE7EA9C52));
  }
  public CAnimParamHandle LookHeadingNormalized {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996D305E6B07));
  }
  public CAnimParamHandle LookHeadingVelocity {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996DF9527FD9));
  }
  public CAnimParamHandle LookPitch {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996D3D4C7812));
  }
  public CAnimParamHandle LookDistance {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996DD4722447));
  }
  public CAnimParamHandle LookDirection {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996DAF5526AD));
  }
  public CAnimParamHandle LookTarget {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996D3361F745));
  }
  public CAnimParamHandle LookTargetWorldSpace {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xA3C6996DD1AC545F));
  }
  public ref bool NetworkLookTarget {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA3C6996D39F2F527));
  }


}