// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_INIT_ChaoticAttractorImpl : CParticleFunctionInitializerImpl, C_INIT_ChaoticAttractor {

  public C_INIT_ChaoticAttractorImpl(nint handle) : base(handle) {
  }

  public ref float AParm {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x31993BA100370330));
  }
  public ref float BParm {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x31993BA13711CFD5));
  }
  public ref float CParm {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x31993BA14C9F79E6));
  }
  public ref float DParm {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x31993BA175D11173));
  }
  public ref float Scale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x31993BA1B731A42F));
  }
  public ref float SpeedMin {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x31993BA1B52776BE));
  }
  public ref float SpeedMax {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x31993BA1C7140B5C));
  }
  public ref int BaseCP {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x31993BA1959440C7));
  }
  public ref bool UniformSpeed {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x31993BA117685F4E));
  }


}