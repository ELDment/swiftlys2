// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_WaterImpulseRendererImpl : CParticleFunctionRendererImpl, C_OP_WaterImpulseRenderer {

  public C_OP_WaterImpulseRendererImpl(nint handle) : base(handle) {
  }

  public CPerParticleVecInput Pos {
    get => new CPerParticleVecInputImpl(_Handle + Schema.GetOffset(0x7CC87C0C3B18EB69));
  }
  public CPerParticleFloatInput Radius {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x7CC87C0C5ACFC08D));
  }
  public CPerParticleFloatInput Magnitude {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x7CC87C0CED0A1D8B));
  }
  public CPerParticleFloatInput Shape {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x7CC87C0C5DCE07D8));
  }
  public CPerParticleFloatInput WindSpeed {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x7CC87C0CADDA5C24));
  }
  public CPerParticleFloatInput Wobble {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0x7CC87C0CF8575B0A));
  }
  public ref bool IsRadialWind {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x7CC87C0C64147034));
  }
  public ref EventTypeSelection_t EventType {
    get => ref _Handle.AsRef<EventTypeSelection_t>(Schema.GetOffset(0x7CC87C0CE1F9AA93));
  }


}