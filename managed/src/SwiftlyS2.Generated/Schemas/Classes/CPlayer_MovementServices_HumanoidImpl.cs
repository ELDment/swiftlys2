// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CPlayer_MovementServices_HumanoidImpl : CPlayer_MovementServicesImpl, CPlayer_MovementServices_Humanoid {

  public CPlayer_MovementServices_HumanoidImpl(nint handle) : base(handle) {
  }

  public ref float StepSoundTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xB65FEA796DEC5F7D));
  }
  public ref float FallVelocity {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xB65FEA796D8D7D9D));
  }
  public ref bool InCrouch {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xB65FEA79CF28FE64));
  }
  public ref uint CrouchState {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0xB65FEA7988282338));
  }
  public GameTime_t CrouchTransitionStartTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xB65FEA79E89CEC2B));
  }
  public ref bool Ducked {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xB65FEA7914A05A59));
  }
  public ref bool Ducking {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xB65FEA798B221170));
  }
  public ref bool InDuckJump {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xB65FEA7917ADB523));
  }
  public ref Vector GroundNormal {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xB65FEA79ED2C77CD));
  }
  public ref float SurfaceFriction {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xB65FEA792BCEE768));
  }
  public ref CUtlStringToken SurfaceProps {
    get => ref _Handle.AsRef<CUtlStringToken>(Schema.GetOffset(0xB65FEA7974007B42));
  }
  public ref int Stepside {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xB65FEA7919FC0520));
  }
  public ref Vector SmoothedVelocity {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xB65FEA7999186E1D));
  }

  public void FallVelocityUpdated() {
    Schema.Update(_Handle, 0xB65FEA796D8D7D9D);
  }
  public void InCrouchUpdated() {
    Schema.Update(_Handle, 0xB65FEA79CF28FE64);
  }
  public void CrouchStateUpdated() {
    Schema.Update(_Handle, 0xB65FEA7988282338);
  }
  public void CrouchTransitionStartTimeUpdated() {
    Schema.Update(_Handle, 0xB65FEA79E89CEC2B);
  }
  public void DuckedUpdated() {
    Schema.Update(_Handle, 0xB65FEA7914A05A59);
  }
  public void DuckingUpdated() {
    Schema.Update(_Handle, 0xB65FEA798B221170);
  }
  public void InDuckJumpUpdated() {
    Schema.Update(_Handle, 0xB65FEA7917ADB523);
  }
}