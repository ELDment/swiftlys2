// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CBaseCSGrenadeImpl : CCSWeaponBaseImpl, CBaseCSGrenade {

  public CBaseCSGrenadeImpl(nint handle) : base(handle) {
  }

  public ref bool Redraw {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x8680ADED612F4EB2));
  }
  public ref bool IsHeldByPlayer {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x8680ADED5FB07B26));
  }
  public ref bool PinPulled {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x8680ADEDB3D8AABA));
  }
  public ref bool JumpThrow {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x8680ADED3202A7A7));
  }
  public ref bool ThrowAnimating {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x8680ADEDB2614685));
  }
  public GameTime_t ThrowTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0x8680ADED57C1B8DA));
  }
  public ref float ThrowStrength {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x8680ADEDF4D38CF4));
  }
  public GameTime_t DropTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0x8680ADED2DE88B09));
  }
  public GameTime_t PinPullTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0x8680ADEDFCD7B2E6));
  }
  public ref bool JustPulledPin {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x8680ADEDDA12F260));
  }
  public GameTick_t NextHoldTick {
    get => new GameTick_tImpl(_Handle + Schema.GetOffset(0x8680ADEDDB254738));
  }
  public ref float NextHoldFrac {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x8680ADED09F02BB7));
  }
  public ref CHandle<CCSWeaponBase> SwitchToWeaponAfterThrow {
    get => ref _Handle.AsRef<CHandle<CCSWeaponBase>>(Schema.GetOffset(0x8680ADED72CB2A60));
  }

  public void RedrawUpdated() {
    Schema.Update(_Handle, 0x8680ADED612F4EB2);
  }
  public void IsHeldByPlayerUpdated() {
    Schema.Update(_Handle, 0x8680ADED5FB07B26);
  }
  public void PinPulledUpdated() {
    Schema.Update(_Handle, 0x8680ADEDB3D8AABA);
  }
  public void JumpThrowUpdated() {
    Schema.Update(_Handle, 0x8680ADED3202A7A7);
  }
  public void ThrowAnimatingUpdated() {
    Schema.Update(_Handle, 0x8680ADEDB2614685);
  }
  public void ThrowTimeUpdated() {
    Schema.Update(_Handle, 0x8680ADED57C1B8DA);
  }
  public void ThrowStrengthUpdated() {
    Schema.Update(_Handle, 0x8680ADEDF4D38CF4);
  }
  public void DropTimeUpdated() {
    Schema.Update(_Handle, 0x8680ADED2DE88B09);
  }
  public void PinPullTimeUpdated() {
    Schema.Update(_Handle, 0x8680ADEDFCD7B2E6);
  }
  public void JustPulledPinUpdated() {
    Schema.Update(_Handle, 0x8680ADEDDA12F260);
  }
  public void NextHoldTickUpdated() {
    Schema.Update(_Handle, 0x8680ADEDDB254738);
  }
  public void NextHoldFracUpdated() {
    Schema.Update(_Handle, 0x8680ADED09F02BB7);
  }
  public void SwitchToWeaponAfterThrowUpdated() {
    Schema.Update(_Handle, 0x8680ADED72CB2A60);
  }
}