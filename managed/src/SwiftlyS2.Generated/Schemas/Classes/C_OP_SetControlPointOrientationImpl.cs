// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_SetControlPointOrientationImpl : CParticleFunctionPreEmissionImpl, C_OP_SetControlPointOrientation {

  public C_OP_SetControlPointOrientationImpl(nint handle) : base(handle) {
  }

  public ref bool UseWorldLocation {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x2461079CF371AED7));
  }
  public ref bool Randomize {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x2461079C4C98CC9C));
  }
  public ref bool SetOnce {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x2461079C6B261086));
  }
  public ref int CP {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x2461079CEB661472));
  }
  public ref int HeadLocation {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x2461079CA8ECDA78));
  }
  public ref QAngle Rotation {
    get => ref _Handle.AsRef<QAngle>(Schema.GetOffset(0x2461079C1992E6BF));
  }
  public ref QAngle RotationB {
    get => ref _Handle.AsRef<QAngle>(Schema.GetOffset(0x2461079C3F41A047));
  }
  public CParticleCollectionFloatInput Interpolation {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0x2461079CCF55B987));
  }


}