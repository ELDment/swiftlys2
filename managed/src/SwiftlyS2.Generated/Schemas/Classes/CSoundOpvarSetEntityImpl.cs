// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CSoundOpvarSetEntityImpl : CBaseEntityImpl, CSoundOpvarSetEntity {

  public CSoundOpvarSetEntityImpl(nint handle) : base(handle) {
  }

  public string StackName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xAF468F963B3E9CD4));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xAF468F963B3E9CD4, value);
  } 
  public string OperatorName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xAF468F96F6140996));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xAF468F96F6140996, value);
  } 
  public string OpvarName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xAF468F962CAEFF3C));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xAF468F962CAEFF3C, value);
  } 
  public ref int OpvarType {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xAF468F96752C1313));
  }
  public ref int OpvarIndex {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xAF468F962482CE01));
  }
  public ref float OpvarValue {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xAF468F96D0681AAE));
  }
  public string OpvarValueString {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xAF468F96D2422B1D));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xAF468F96D2422B1D, value);
  } 
  public ref bool SetOnSpawn {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xAF468F96749B637D));
  }


}