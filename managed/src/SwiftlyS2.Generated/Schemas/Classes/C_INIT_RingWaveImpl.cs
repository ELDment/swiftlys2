// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_INIT_RingWaveImpl : CParticleFunctionInitializerImpl, C_INIT_RingWave {

  public C_INIT_RingWaveImpl(nint handle) : base(handle) {
  }

  public CParticleTransformInput TransformInput {
    get => new CParticleTransformInputImpl(_Handle + Schema.GetOffset(0xA5DA0691B3FDC289));
  }
  public CParticleCollectionFloatInput ParticlesPerOrbit {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA069184EA503F));
  }
  public CPerParticleFloatInput InitialRadius {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA06918B8AAB8B));
  }
  public CPerParticleFloatInput Thickness {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA0691DC7C1987));
  }
  public CPerParticleFloatInput InitialSpeedMin {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA0691E36FD694));
  }
  public CPerParticleFloatInput InitialSpeedMax {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA0691D184D4F6));
  }
  public CPerParticleFloatInput Roll {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA069188F97A90));
  }
  public CPerParticleFloatInput Pitch {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA06911CBA22DB));
  }
  public CPerParticleFloatInput Yaw {
    get => new CPerParticleFloatInputImpl(_Handle + Schema.GetOffset(0xA5DA0691B40C1E8A));
  }
  public ref bool EvenDistribution {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA5DA069184932067));
  }
  public ref bool XYVelocityOnly {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA5DA0691A20CED5B));
  }


}