// <auto-generated />

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CBaseTrailRendererImpl : CBaseRendererSource2Impl, CBaseTrailRenderer {

  public CBaseTrailRendererImpl(nint handle) : base(handle) {
  }

  public ref ParticleOrientationChoiceList_t OrientationType {
    get => ref _Handle.AsRef<ParticleOrientationChoiceList_t>(Schema.GetOffset(0x2FCF7FA6931FA045));
  }
  public ref int OrientationControlPoint {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x2FCF7FA655B5B328));
  }
  public ref float MinSize {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x2FCF7FA6BDC3B198));
  }
  public ref float MaxSize {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x2FCF7FA68CA4E6BE));
  }
  public CParticleCollectionRendererFloatInput StartFadeSize {
    get => new CParticleCollectionRendererFloatInputImpl(_Handle + Schema.GetOffset(0x2FCF7FA6BA251D92));
  }
  public CParticleCollectionRendererFloatInput EndFadeSize {
    get => new CParticleCollectionRendererFloatInputImpl(_Handle + Schema.GetOffset(0x2FCF7FA62D3FD423));
  }
  public ref bool ClampV {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x2FCF7FA6D02C13FE));
  }


}